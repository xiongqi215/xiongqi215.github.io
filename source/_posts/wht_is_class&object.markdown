---
layout: post
title: "谈谈我对面向对象以及类与对象的理解"
date: 2016-09-22 17:57:14 +0800
comments: true
categories: java
tags:  [Java,class,object,面向对象编程,java内存机制]
description: 谈谈我对面向对象的理解以及类与对象的关系
---

![](http://7xrvdu.com1.z0.glb.clouddn.com/oop.jpg)

对于刚接触JAVA或者其他面向对象编程语言的朋友们来说，可能一开始都很难理解面向对象的概念以及`类`和`对象`的关系。笔者曾经带过一个短期培训班教授java入门基础，在最后结束课程的时候学生们还是普遍没有真正理解`类`与`对象`的意义。今天兴起，想谈谈我自己对对面向对象的理解以及类与对象的关系。


# 面向对象

首先一言不和先百度，得到如下定义：

 > 一切事物皆对象，通过面向对象的方式，将现实世界的事物抽象成对象，现实世界中的关系抽象成类、继承，帮助人们实现对现实世界的抽象与数字建模。
 
我们知道，编写程序的目的是为了解决现实生活中的问题，编程的思维方式也应该贴近现实生活的思维方式，面向对象的编程方式就是为了实现上述目的二出现的。它使得编程工作更直观，更易理解。需要注意的是**这里说的编程方式不光是coding还包括了设计的过程也是面向对象的**

## 为什么说面向对象更贴近实际生活
  想象一下，当我们向别人描述一样事物时，我们都是怎么说的？"它有像鸭子一样的嘴巴"，"它有4条退"，"爪子里还有蹼"，"它是哺乳动物但却是卵生"。当我们把这一系列的属性`组合`起来便得到的鸭嘴兽这一`类`，而且`哺乳动物`一词简单精炼的说出了所有哺乳动物的特性而不用一一列出，这是`继承`特性的体现，同时`卵生`又是`多态的体现`。

## 与早期结构化编程相比

早期结构化编程是面向过程的（功能），换句话说程序是由功能的集合组成，而调用者是作为功能的参数传入的。而在面向对象的程序中，对象是主体，程序是由对象的集合组成。一个对象中包含一系列符合设计的功能供其他对象调用。这么说可能还是比较抽象，
![](http://7xrvdu.com1.z0.glb.clouddn.com/bq_jglz)，例如当我们设计一个五子棋游戏时

面向过程的设计思路就是首先分析问题的步骤：
1、开始游戏，2、黑子先走，3、绘制画面，4、判断输赢，5、轮到白子，6、绘制画面，7、判断输赢，8、返回步骤2，9、输出最后结果。
把上面每个步骤用分别的函数来实现，问题就解决了。 

而面向对象的设计则是从另外的思路来解决问题。整个五子棋可以分为：
1、黑白双方，这两方的行为是一模一样的，2、棋盘系统，负责绘制画面，3、规则系统，负责判定诸如犯规、输赢等。
第一类对象（玩家对象）负责接受用户输入，并告知第二类对象（棋盘对象）棋子布局的变化，棋盘对象接收到了棋子的变化就要负责在屏幕上面显示出这种变化，同时利用第三类对象（规则系统）来对棋局进行判定。
（以上例子来自[国内著名问答社区](https://www.zhihu.com/question/28790424/answer/42102986 "知乎")）

然而事实上，我们不难发现，即使我们使用面向对象去做开发时，上面例子里面向过程中提到的几个下棋过程我们还是都实现了的，只不过程被封装到了类的方法中。所以说其实**面向对象和面向过程并不是编程的区别，而是设计的区别**。


# 类与对象

`类`的定义就是一个模板，它描述的一类对象的属性与行为。

`对象`则是根据所属`类`模板创造出来的实实在在的事物。

换句话说，**类是抽象的而对象是具体的**。鸭嘴兽是类型，具体的鸭嘴兽A、鸭嘴兽B就是对象了。在JAVA中对象通过`new`关键字声明。 在具体点，《红色警戒》都玩过，美国大兵是一`类`兵种，点击制造后从兵营里出来的那个会开枪的家伙就是`对象`了：

![](http://7xrvdu.com1.z0.glb.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20160927173741.png)



 
 

  


